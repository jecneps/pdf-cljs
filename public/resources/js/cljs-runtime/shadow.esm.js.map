{"version":3,"sources":["shadow/esm.cljs"],"mappings":";AAcA;;;4BAAA,5BAAMA,gEAEHC;AAFH,AAGE,OAACC,kBAAqBD","names":["shadow.esm/dynamic-import","what","js/shadow_esm_import"],"sourcesContent":["(ns shadow.esm)\n\n;; workaround until we can tell the closure-compiler to not rewrite\n;; a dynamic import(). we just want to keep it as is to import \"foreign\"\n;; code dynamically at runtime.\n;; FIXME: can't use import as name apparantly?\n;;\n;; (ns foo (:require [shadow.esm :refer (import)]))\n;; (defn init []\n;;   (js/console.log (import \"./b.js\")))\n;; ------------------------- ^------------------------------------------------------\n;; Error in phase :compilation\n;; Arguments to import must be quoted. Offending spec: ./b.js at line 10 demo / esm/a.cljs\n;; --------------------------------------------------------------------------------\n(defn dynamic-import\n  \"dynamic import(path) where path is relative to the :output-dir of the build\"\n  [what]\n  (js/shadow_esm_import what))\n"],"x_google_ignoreList":[0]}